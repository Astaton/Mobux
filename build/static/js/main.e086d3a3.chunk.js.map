{"version":3,"sources":["SearchBar.js","BigDogPic.js","DogPic.js","ResultPageExplorer.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","keyCode","this","clickHandler","document","getElementById","addEventListener","evt","searchOnEnter","removeEventListener","searchInputElem","breed","value","toLowerCase","props","searchForBreed","className","htmlFor","type","id","name","defaultValue","onClick","Component","BigDogPic","imgUrl","hideBigPic","alt","src","DogPic","picClickHandler","ResultPageExplorer","changePageHandler","page","dogData","pages","allPages","Array","Math","ceil","length","keys","pageIndex","start","end","slice","disabled","map","pagesIndex","goToPageNo","key","App","state","dogsOnPage","selectedDogImgUrl","status","bind","request","XMLHttpRequest","componentThis","open","onload","response","JSON","parse","responseText","setState","message","console","log","updatePicsOnPage","send","num","newPage","classList","add","remove","pup","index","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e086d3a3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass SearchBar extends Component {\r\n  searchOnEnter({ keyCode }) {\r\n    if (keyCode === 13) {\r\n      this.clickHandler();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const searchInputElem = document.getElementById(\"searchInput\");\r\n    searchInputElem.addEventListener(\"keyup\", (evt) => this.searchOnEnter(evt));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const searchInputElem = document.getElementById(\"searchInput\");\r\n    searchInputElem.removeEventListener(\"keyup\", (evt) =>\r\n      this.searchOnEnter(evt)\r\n    );\r\n  }\r\n\r\n  clickHandler() {\r\n    const searchInputElem = document.getElementById(\"searchInput\");\r\n    const breed = searchInputElem.value.toLowerCase();\r\n    if (breed) {\r\n      searchInputElem.value = \"\";\r\n      this.props.searchForBreed(breed);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"searchWrapper\">\r\n        <label htmlFor=\"searchInput\">\r\n          Enter the breed of dog to search for\r\n        </label>\r\n        <br></br>\r\n        <input\r\n          type=\"text\"\r\n          id=\"searchInput\"\r\n          name=\"searchInput\"\r\n          defaultValue=\"poodle\"\r\n        />\r\n        <button onClick={() => this.clickHandler()}>Search</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nconst BigDogPic = ({ imgUrl, breed, hideBigPic }) => (\r\n  <div id=\"bigPicContainer\" className=\"hideBigPic\" onClick={() => hideBigPic()}>\r\n    <img className=\"bigDogPic\" alt={`a ${breed} good boy`} src={imgUrl} />\r\n  </div>\r\n);\r\n\r\nexport default BigDogPic;\r\n","import React from \"react\";\r\n\r\nconst DogPic = ({ imgUrl, breed, picClickHandler }) => (\r\n  <div className=\"dogPicFrame\">\r\n    <img\r\n      className=\"dogPic\"\r\n      src={imgUrl}\r\n      alt={`a ${breed} good boy`}\r\n      onClick={() => picClickHandler(imgUrl)}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default DogPic;\r\n","import React from \"react\";\r\n\r\nconst ResultPageExplorer = ({ changePageHandler, page, dogData }) => {\r\n  const pages = (function () {\r\n    const allPages = [...Array(Math.ceil(dogData.length / 9)).keys()];\r\n    let pageIndex = page - 1;\r\n    let start = pageIndex > 5 ? pageIndex - 5 : 0;\r\n    let end = start + 10;\r\n    return allPages.slice(start, end);\r\n  })();\r\n\r\n  return (\r\n    <div className=\"ResultPageExplorerContainer\">\r\n      <button\r\n        onClick={() => changePageHandler(-1)}\r\n        disabled={page === 1 ? \"disabled\" : null}\r\n      >\r\n        Previous\r\n      </button>\r\n      <div className=\"pageNumWrapper\">\r\n        {pages.map((pagesIndex) => {\r\n          const goToPageNo = pagesIndex + 1;\r\n          return goToPageNo !== page ? (\r\n            <span\r\n              className=\"pageExplorerNumsDefault\"\r\n              key={`page${goToPageNo}`}\r\n              onClick={() => changePageHandler(goToPageNo - page)}\r\n            >\r\n              {goToPageNo}\r\n            </span>\r\n          ) : (\r\n            <span className=\"pageExplorerNumsActive\" key={`page${goToPageNo}`}>\r\n              {goToPageNo}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      <button\r\n        onClick={() => changePageHandler(1)}\r\n        disabled={Math.ceil(dogData.length / 9) === page ? \"disabled\" : null}\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultPageExplorer;\r\n","import React, { Component } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport BigDogPic from \"./BigDogPic\";\r\nimport DogPic from \"./DogPic\";\r\nimport ResultPageExplorer from \"./ResultPageExplorer\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dogData: \"Search for a good boy?\",\r\n      dogsOnPage: [],\r\n      selectedDogImgUrl: \"\",\r\n      status: \"error\",\r\n      page: 1,\r\n    };\r\n    this.searchForBreed = this.searchForBreed.bind(this);\r\n    this.picClickHandler = this.picClickHandler.bind(this);\r\n    this.hideBigPic = this.hideBigPic.bind(this);\r\n    this.changePageHandler = this.changePageHandler.bind(this);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  searchForBreed(breed) {\r\n    const request = new XMLHttpRequest();\r\n    const componentThis = this;\r\n\r\n    request.open(\"get\", `https://dog.ceo/api/breed/${breed}/images`);\r\n    request.onload = function () {\r\n      const response = JSON.parse(request.responseText);\r\n      componentThis.setState(\r\n        {\r\n          dogData: response.message,\r\n          status: response.status,\r\n          breed: breed,\r\n          page: 1,\r\n        },\r\n        () => {\r\n          console.log(componentThis.state.status);\r\n          if (componentThis.state.status === \"success\") {\r\n            componentThis.updatePicsOnPage();\r\n          }\r\n        }\r\n      );\r\n    };\r\n    request.send();\r\n  }\r\n\r\n  updatePicsOnPage() {\r\n    const end = this.state.page * 9;\r\n    const start = end - 9;\r\n    const dogsOnPage = this.state.dogData.slice(start, end);\r\n    this.setState({ dogsOnPage });\r\n  }\r\n\r\n  changePageHandler(num) {\r\n    const newPage = this.state.page + num;\r\n    this.setState({ page: newPage }, () => {\r\n      this.updatePicsOnPage();\r\n    });\r\n  }\r\n\r\n  picClickHandler(imgUrl) {\r\n    this.setState({ selectedDogImgUrl: imgUrl },() => {\r\n      const bigPicElem = document.getElementById(\"bigPicContainer\");\r\n      bigPicElem.classList.add(\"showBigPic\");\r\n    });\r\n  }\r\n\r\n  hideBigPic() {\r\n    const bigPicElem = document.getElementById(\"bigPicContainer\");\r\n    bigPicElem.classList.remove(\"showBigPic\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <BigDogPic\r\n          breed={this.state.breed}\r\n          imgUrl={this.state.selectedDogImgUrl}\r\n          hideBigPic={this.hideBigPic}\r\n        />\r\n        <SearchBar searchForBreed={this.searchForBreed} />\r\n        {this.state.status === \"success\" ? (\r\n          <div id=\"displayWrapper\">\r\n            <p>{`Your search for ${this.state.breed}s found ${this.state.dogData.length} images`}</p>\r\n            <div id=\"displayBox\">\r\n              {this.state.dogsOnPage.map((pup, index) => (\r\n                <DogPic\r\n                  key={index + pup}\r\n                  imgUrl={pup}\r\n                  breed={this.state.breed}\r\n                  picClickHandler={this.picClickHandler}\r\n                />\r\n              ))}\r\n            </div>\r\n            <ResultPageExplorer\r\n              changePageHandler={this.changePageHandler}\r\n              page={this.state.page}\r\n              dogData={this.state.dogData}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <p>\r\n              {this.state.breed\r\n                ? `An error occured while searching for ${this.state.breed}s`\r\n                : \"\"}\r\n            </p>\r\n            <p>{this.state.dogData}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}